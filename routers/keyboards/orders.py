from typing import List

from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from routers.buttons import buttons as btn
from schemas.order import Order

from schemas.profession import Profession, Job
from settings import settings
from utils.datetime_service import get_days_in_month


def orders_menu(has_orders: bool) -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é —Ä–∞–∑–¥–µ–ª–∞ –ú–æ–∏ –∑–∞–∫–∞–∑—ã"""
    keyboard = InlineKeyboardBuilder()

    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
    if has_orders:
        keyboard.row(InlineKeyboardButton(text=f"–†–∞–∑–º–µ—â–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã", callback_data=f"my_orders_list"))

    keyboard.row(InlineKeyboardButton(text=f"–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –∑–∞–∫–∞–∑", callback_data=f"create_order"))

    keyboard.row(InlineKeyboardButton(text=f"{btn.BACK}", callback_data="main_menu"))

    return keyboard


def my_orders_list_keyboard(orders: List[Order]) -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞"""
    keyboard = InlineKeyboardBuilder()

    for idx, order in enumerate(orders, start=1):
        keyboard.row(InlineKeyboardButton(text=f"{idx}", callback_data=f"my_order|{order.id}"))

    keyboard.adjust(3)

    keyboard.row(InlineKeyboardButton(text=f"{btn.BACK}", callback_data="main_menu|my_orders"))

    return keyboard


def my_order_keyboard(order_id: int) -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π —Å –∑–∞–∫–∞–∑–æ–º"""
    keyboard = InlineKeyboardBuilder()

    # –£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑
    # keyboard.row(InlineKeyboardButton(text=f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑", callback_data=f"edit_order|{order_id}"))
    keyboard.row(InlineKeyboardButton(text=f"–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑", callback_data=f"delete_order|{order_id}"))

    keyboard.row(InlineKeyboardButton(text=f"{btn.BACK}", callback_data="my_orders_list"))

    return keyboard


def delete_order_confirm_keyboard(order_id: int) -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    keyboard = InlineKeyboardBuilder()

    # –£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑
    keyboard.row(
        InlineKeyboardButton(text=f"–î–∞", callback_data=f"delete_order_confirmed|{order_id}"),
        InlineKeyboardButton(text=f"–ù–µ—Ç", callback_data=f"my_order|{order_id}"),
    )

    return keyboard


def profession_keyboard(professions: List[Profession]) -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    keyboard = InlineKeyboardBuilder()

    for profession in professions:
        keyboard.row(InlineKeyboardButton(text=f"{profession.title}", callback_data=f"choose_profession|{profession.id}"))

    keyboard.row(InlineKeyboardButton(text=f"–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="main_menu|my_orders"))

    return keyboard


def select_jobs_keyboard(jobs: List[Job], selected_jobs: List[int]) -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ Jobs —Å –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç–æ–º"""
    keyboard = InlineKeyboardBuilder()

    for job in jobs:
        title = job.title

        # –ü–æ–º–µ—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã
        if job.id in selected_jobs:
            title = "[ ‚úì ] " + title

        keyboard.row(InlineKeyboardButton(text=f"{title}", callback_data=f"select_jobs|{job.id}"))

    keyboard.adjust(2)

    # –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å, –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ Job –≤—ã–±—Ä–∞–Ω–∞
    if len(selected_jobs):
        keyboard.row(InlineKeyboardButton(text=f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="select_jobs_done"))

    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
    keyboard.row(InlineKeyboardButton(text=f"–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="main_menu|my_orders"))

    return keyboard


def calendar_keyboard(year: int, month: int, dates_data: dict, need_prev_month: bool) -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞-–∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã"""
    keyboard = InlineKeyboardBuilder()

    # –ø–æ–ª—É—á–∞–µ–º –¥–Ω–∏ –≤ –º–µ—Å—è—Ü–µ –¥–∞—Ç–∞–º–∏
    month_days = get_days_in_month(year, month)

    # –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    header = f"üóìÔ∏è {settings.calendar_months[month]} {year}"
    keyboard.add(InlineKeyboardButton(text=header, callback_data="ignore"))

    # –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
    week_days = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"]
    keyboard.row(*[InlineKeyboardButton(text=day, callback_data='ignore') for day in week_days])

    buttons = []

    # –æ—Ç—Å—Ç—É–ø –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –≤ –º–µ—Å—è—Ü–µ
    buttons += [InlineKeyboardButton(text=" ", callback_data="ignore")] * (month_days[0].weekday())

    # –∫–Ω–æ–ø–∫–∏ –ø–æ –¥–Ω—è–º –º–µ—Å—è—Ü–∞
    for d in month_days:
        callback = f"select_deadline|{d.day}.{d.month}.{d.year}"
        buttons.append(InlineKeyboardButton(text=str(d.day), callback_data=f'{callback}'))

    # –æ—Ç—Å—Ç—É–ø –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–Ω—è
    buttons += [InlineKeyboardButton(text=" ", callback_data="ignore")] * (6 - month_days[-1].weekday())

    # —Ä–∞–∑–±–∏–≤–∞–µ–º –ø–æ 7 —à—Ç—É–∫ –≤ —Å—Ç—Ä–æ–∫–µ
    for i in range(0, len(buttons), 7):
        keyboard.row(*buttons[i:i + 7])

    # –∫–Ω–æ–ø–∫–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞ –∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
    prev_month_name = settings.calendar_months[dates_data["prev_month"]]
    next_month_name = settings.calendar_months[dates_data["next_month"]]

    # –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –ø—Ä–µ–¥—ã–¥—É—â–∏–π –º–µ—Å—è—Ü
    if need_prev_month:
        keyboard.row(
            InlineKeyboardButton(text=f"<< {prev_month_name} {dates_data['prev_year']}",
                                          callback_data=f"action|{dates_data['prev_month']}|{dates_data['prev_year']}"),
            InlineKeyboardButton(text=f"{next_month_name} {dates_data['next_year']} >>",
                                 callback_data=f"action|{dates_data['next_month']}|{dates_data['next_year']}")
        )
    # –ï—Å–ª–∏ –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ —Å–ª–µ–¥—É—é—â–∏–π
    else:
        keyboard.row(
            InlineKeyboardButton(text=" ", callback_data="ignore"),
            InlineKeyboardButton(text=f"{next_month_name} {dates_data['next_year']} >>",
                                 callback_data=f"action|{dates_data['next_month']}|{dates_data['next_year']}")
        )

    # –û—Ç–º–µ–Ω–∏—Ç—å
    keyboard.row(InlineKeyboardButton(text=f"–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="main_menu|my_orders"))

    return keyboard


def confirm_create_order_keyboard() -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    keyboard = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
    keyboard.row(InlineKeyboardButton(text=f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_create_order"))
    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
    keyboard.row(InlineKeyboardButton(text=f"–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="main_menu|my_orders"))

    return keyboard


def confirmed_create_order_keyboard() -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    keyboard = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∞ –ú–æ–∏ –∑–∞–∫–∞–∑—ã
    keyboard.row(InlineKeyboardButton(text=f"{btn.MY_ORDERS}", callback_data=f"main_menu|my_orders"))

    return keyboard


def skip_cancel_keyboard() -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å/–û—Ç–º–µ–Ω–∏—Ç—å"""
    keyboard = InlineKeyboardBuilder()

    keyboard.row(InlineKeyboardButton(text=f"–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip"))
    keyboard.row(InlineKeyboardButton(text=f"–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="main_menu|my_orders"))

    return keyboard


def continue_cancel_keyboard() -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å/–û—Ç–º–µ–Ω–∏—Ç—å"""
    keyboard = InlineKeyboardBuilder()

    keyboard.row(InlineKeyboardButton(text=f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="continue"))
    keyboard.row(InlineKeyboardButton(text=f"–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="main_menu|my_orders"))

    return keyboard


def cancel_keyboard() -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–º–µ–Ω—ã"""
    keyboard = InlineKeyboardBuilder()

    keyboard.row(InlineKeyboardButton(text=f"–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="main_menu|my_orders"))

    return keyboard


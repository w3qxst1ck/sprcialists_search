from typing import List

from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from schemas.client import RejectReason
from routers.buttons import buttons as btn
from schemas.profession import Profession


def confirm_registration_executor_keyboard(tg_id: str) -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è"""
    keyboard = InlineKeyboardBuilder()

    keyboard.row(
        InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ", callback_data=f"executor_confirm|{tg_id}"),
        InlineKeyboardButton(text="–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå", callback_data=f"executor_cancel|{tg_id}")
    )

    return keyboard


def confirm_edit_executor_keyboard(tg_id: str) -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è"""
    keyboard = InlineKeyboardBuilder()

    keyboard.row(
        InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ", callback_data=f"executor_edit_confirm|{tg_id}"),
        InlineKeyboardButton(text="–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå", callback_data=f"executor_edit_cancel|{tg_id}")
    )

    return keyboard


def confirm_registration_client_keyboard(tg_id: str) -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞"""
    keyboard = InlineKeyboardBuilder()

    keyboard.row(
        InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ", callback_data=f"client_confirm|{tg_id}"),
        InlineKeyboardButton(text="–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå", callback_data=f"client_cancel|{tg_id}")
    )

    return keyboard


def select_reasons_keyboard(reasons: list[RejectReason], selected_reasons: List[int]) -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –º—É–ª—å—Ç–∏–≤—ã–±–æ—Ä–æ–º –ø—Ä–∏—á–∏–Ω –æ—Ç–∫–∞–∑–∞"""
    keyboard = InlineKeyboardBuilder()

    for reason in reasons:
        if reason.id in selected_reasons:
            text = f"[ ‚úì ] {reason.reason}"
        else:
            text = reason.reason

        keyboard.row(InlineKeyboardButton(text=text, callback_data=f"reject_reason|{reason.id}"))

    # –ö–Ω–æ–ø–∫–∞ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
    if selected_reasons:
        keyboard.row(InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"reject_reasons_done"))

    return keyboard


def admin_menu_keyboard() -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞"""
    keyboard = InlineKeyboardBuilder()

    keyboard.row(InlineKeyboardButton(text=f"üíº –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é", callback_data=f"add_profession"))
    keyboard.row(InlineKeyboardButton(text=f"üõ†Ô∏è –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–¥–µ–ª –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏", callback_data=f"add_job"))
    keyboard.row(InlineKeyboardButton(text=f"{btn.BACK}", callback_data=f"main_menu"))

    return keyboard


def profession_keyboard(professions: List[Profession]) -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏"""

    keyboard = InlineKeyboardBuilder()

    for p in professions:
        keyboard.row(InlineKeyboardButton(text=f"{p.title}", callback_data=f"choose_profession|{p.id}"))

    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
    keyboard.row(InlineKeyboardButton(text=f"{btn.CANCEL}", callback_data=f"admin_cancel"))

    return keyboard


def back_to_main_menu_keyboard() -> InlineKeyboardBuilder:
    """–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = InlineKeyboardBuilder()

    keyboard.row(InlineKeyboardButton(text=f"{btn.BACK}", callback_data=f"main_menu"))

    return keyboard


def yes_no_keyboard() -> InlineKeyboardBuilder:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–ê/–ù–ï–¢"""
    keyboard = InlineKeyboardBuilder()

    keyboard.row(
        InlineKeyboardButton(text=f"–î–∞", callback_data=f"confirm"),
        InlineKeyboardButton(text=f"–ù–µ—Ç", callback_data=f"admin_cancel")
    )

    return keyboard


def cancel_keyboard() -> InlineKeyboardBuilder:
    """–ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã"""
    keyboard = InlineKeyboardBuilder()

    keyboard.row(InlineKeyboardButton(text=f"{btn.CANCEL}", callback_data=f"admin_cancel"))

    return keyboard
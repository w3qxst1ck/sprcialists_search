from typing import List

from schemas.profession import Profession, Job
from settings import settings
from utils.age import get_age_text


def get_executor_profile_message(data: dict, profession: Profession, jobs: List[Job]) -> str:
    """–ê–Ω–∫–µ—Ç–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    age = get_age_text(data["age"])
    jobs = ", ".join([job.title for job in jobs])
    langs = "/".join([settings.languages[lang] for lang in data["selected_langs"]])
    tags = " ".join([f"#{tag}" for tag in data["tags"]])
    links = " | ".join(data["links"])
    contacts = data["contacts"] if data["contacts"] else "–Ω–µ —É–∫–∞–∑–∞–Ω—ã"
    location = data["location"] if data["location"] else "–Ω–µ —É–∫–∞–∑–∞–Ω"

    msg = f"üë§ {data['name']}, {age} ‚Äî {profession.title} ({jobs})\n" \
          f"üíº {data['experience']} | üí≤ {data['rate']} | {langs}\n" \
          f"üè∑Ô∏è {tags}\n" \
          f"üìé {links}\n" \
          f"–û —Å–µ–±–µ: {data['description']}\n" \
          f"–ì–æ—Ä–æ–¥: {location}\n" \
          f"–ö–æ–Ω—Ç–∞–∫—Ç—ã: {contacts}"

    return msg
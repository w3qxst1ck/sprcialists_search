from schemas.executor import ExecutorAdd, Executor
from settings import settings
from utils.age import get_age_text


def get_executor_profile_message(executor: ExecutorAdd | Executor) -> str:
    """–ê–Ω–∫–µ—Ç–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    age = get_age_text(executor.age)
    jobs = ", ".join([job.title for job in executor.jobs])
    # langs = "/".join([settings.languages[lang] for lang in executor.langs])
    # tags = " ".join([f"#{tag}" for tag in executor.tags])
    links = "\n".join(executor.links)
    # contacts = executor.contacts if executor.contacts else "–Ω–µ —É–∫–∞–∑–∞–Ω—ã"
    location = f"üìç {executor.location}\n" if executor.location else ""
    verified = "‚úîÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞" if executor.verified else "üö´ –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞"

    msg = f"üë§ {executor.name}, {age}\n" \
          f"üé® {executor.profession.title} ({jobs}). {executor.experience}\n" \
          f"üíµ {executor.rate}\n" \
          f"{location}\n" \
          f"üìé –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ:\n\n{links}\n\n" \
          f"–û —Å–µ–±–µ: {executor.description}\n\n" \
          f"–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: {verified}"

    return msg


def executor_profile_to_show(executor: Executor, in_favorites: bool = False) -> str:
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤ –ª–µ–Ω—Ç–µ"""
    msg = get_executor_profile_message(executor)

    if in_favorites:
        msg = "<i>‚≠ê –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º</i>\n\n" + msg

    return msg

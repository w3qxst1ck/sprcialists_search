from schemas.executor import ExecutorAdd, Executor
from settings import settings
from utils.age import get_age_text


def get_executor_profile_message(executor: ExecutorAdd | Executor) -> str:
    """–ê–Ω–∫–µ—Ç–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    age = get_age_text(executor.age)
    jobs = ", ".join([job.title for job in executor.jobs])
    links = "\n".join(executor.links)
    contacts = f"üìû {executor.contacts}\n" if executor.contacts else ""
    location = f"üìç {executor.location}\n" if executor.location else ""
    emoji = f"{executor.profession.emoji}" if executor.profession.emoji else ""

    # –ü–æ–ª–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

    msg = f"üë§ {executor.name}, {age}\n" \
          f"{emoji} {executor.profession.title} ({jobs}). {executor.experience}\n" \
          f"üíµ {executor.rate}\n" \
          f"{location}" \
          f"{contacts}" \
          f"üìé –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ:\n\n{links}\n\n" \
          f"–û —Å–µ–±–µ: {executor.description}"

    return msg


def executor_card_for_admin_verification(executor: ExecutorAdd) -> str:
    """–ê–Ω–∫–µ—Ç–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∞–º–∏ –≤ –≥—Ä—É–ø–ø–µ"""
    msg = get_executor_profile_message(executor)

    verified = "‚úîÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞" if executor.verified else "üö´ –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞"

    msg += f"\n\n{verified}"

    return msg


def executor_profile_to_show(executor: Executor, in_favorites: bool = False) -> str:
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤ –ª–µ–Ω—Ç–µ"""
    msg = get_executor_profile_message(executor)

    if in_favorites:
        msg = "<i>‚≠ê –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º</i>\n\n" + msg

    return msg

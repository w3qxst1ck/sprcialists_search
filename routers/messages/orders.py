import datetime
from typing import List

from schemas.order import OrderAdd, Order
from utils.datetime_service import get_days_left_text


def get_order_card_message(order: OrderAdd) -> str:
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –∑–∞–∫–∞–∑–∞"""
    jobs = ", ".join([job.title for job in order.jobs])
    price = f"{order.price} ‚ÇΩ" if order.price else "–∂–¥—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π"

    # –°–∫–ª–æ–Ω–µ–Ω–∏–µ —á–∏—Å–ª–∞ –¥–Ω–∏
    days_text = get_days_left_text(order.period)

    emoji = f"{order.profession.emoji} " if order.profession.emoji else ""

    msg = f"<b>{order.title}</b>\n\n" \
          f"{emoji}{order.profession.title} ({jobs})\n" \
          f"–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏: <i>{order.task}</i>\n" \
          f"üíµ –ë—é–¥–∂–µ—Ç: {price}\n" \
          f"‚è≥ –°—Ä–æ–∫: {order.period} {days_text}"

    # –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    if order.files:
        filenames_text = ", ".join([file.filename for file in order.files])
        msg += f"\nüìé –§–∞–π–ª—ã: {filenames_text}"

    # –û—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    if order.requirements:
        msg += f"\n‚ö†Ô∏è –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: {order.requirements}"

    return msg


def order_card_for_edit(order: OrderAdd) -> str:
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –∑–∞–∫–∞–∑–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–Ω–æ–ø–∫–∞—Ö –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è"""
    msg = get_order_card_message(order)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
    buttons_text = f"\n\n<i>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã:</i>\n" \
                   f"<b>1.</b> –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é\n" \
                   f"<b>2.</b> –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ\n" \
                   f"<b>3.</b> –ò–∑–º–µ–Ω–∏—Ç—å –¢–ó\n" \
                   f"<b>4.</b> –ò–∑–º–µ–Ω–∏—Ç—å –±—é–¥–∂–µ—Ç\n" \
                   f"<b>5.</b> –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ä–æ–∫ –∑–∞–∫–∞–∑–∞\n" \
                   f"<b>6.</b> –ò–∑–º–µ–Ω–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è\n" \
                   f"<b>7.</b> –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"

    msg += buttons_text
    return msg


def order_card_to_show(order: Order, in_favorites: bool = False) -> str:
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤ –ª–µ–Ω—Ç–µ"""
    msg = get_order_card_message(order)

    if in_favorites:
        msg = "<i>‚≠ê –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º</i>\n\n" + msg

    return msg


def get_my_orders_list(orders: List[Order]) -> str:
    """–°–ø–∏—Å–æ–∫ —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤"""
    msg = f"üìã <b>–†–∞–∑–º–µ—â–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã</b>\n\n"

    for idx, order in enumerate(orders, start=1):
        # –°–∫–ª–æ–Ω–µ–Ω–∏–µ —á–∏—Å–ª–∞ –¥–Ω–∏
        days_text = get_days_left_text(order.period)

        # –ë—é–¥–∂–µ—Ç
        price = f"{order.price} ‚ÇΩ" if order.price else "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"

        # –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        if order.files:
            filenames = ", ".join([file.filename for file in order.files])
            filenames_text = f"| üìé {filenames}"
        else:
            filenames_text = ""

        msg += f"<b>{idx}</b>. {order.title} \n" \
               f"üóìÔ∏è {order.period} {days_text} | üíµ {price} {filenames_text}\n\n"

    msg += "\n–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –∑–∞–∫–∞–∑ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –Ω–æ–º–µ—Ä —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∏–∂–µ"

    return msg
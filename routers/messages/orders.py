import datetime
from typing import List

from schemas.order import OrderAdd, Order
from utils.datetime_service import convert_date_time_to_str, get_days_left_text


def get_order_card_message(order: OrderAdd) -> str:
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –∑–∞–∫–∞–∑–∞"""
    jobs = ", ".join([job.title for job in order.jobs])
    price = f"{order.price} ‚ÇΩ" if order.price else "–∂–¥—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π"

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Ü–∏—Ñ—Ä–æ–π
    days_left = order.deadline.day - datetime.datetime.now().day
    # –°–∫–ª–æ–Ω–µ–Ω–∏–µ —á–∏—Å–ª–∞ –¥–Ω–∏
    days_str = get_days_left_text(days_left)

    msg = f"<b>{order.title}</b>\n\n" \
          f"{order.profession.title} ({jobs})\n" \
          f"–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏: <i>{order.task}</i>\n" \
          f"üíµ –ë—é–¥–∂–µ—Ç: {price}\n" \
          f"‚è≥ –°—Ä–æ–∫: {days_left} {days_str}"

    if order.requirements:
        msg += f"\n‚ö†Ô∏è –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: {order.requirements}"

    return msg


def get_my_orders_list(orders: List[Order]) -> str:
    """–°–ø–∏—Å–æ–∫ —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤"""
    msg = f"üìã <b>–†–∞–∑–º–µ—â–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã</b>\n\n"

    for idx, order in enumerate(orders, start=1):
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Ü–∏—Ñ—Ä–æ–π
        days_left = order.deadline.day - datetime.datetime.now().day
        # –°–∫–ª–æ–Ω–µ–Ω–∏–µ —á–∏—Å–ª–∞ –¥–Ω–∏
        days_str = get_days_left_text(days_left)

        # –ë—é–¥–∂–µ—Ç
        price = f"{order.price} ‚ÇΩ" if order.price else "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"

        msg += f"<b>{idx}</b>. {order.title} \n" \
               f"‚è≥ {days_left} {days_str} | üíµ {price} \n\n"

    msg += "\n–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –∑–∞–∫–∞–∑ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –Ω–æ–º–µ—Ä —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∏–∂–µ"

    return msg
from typing import Any, List

from aiogram import Router, types, F, Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message
from database.orm import AsyncOrm
from database.tables import UserRoles
from logger import logger

from middlewares.database import DatabaseMiddleware
from middlewares.admin import AdminMiddleware
from middlewares.private import CheckGroupMessageMiddleware
from routers.keyboards.client_reg import to_main_menu
from routers.states.registration import Reject
from schemas.executor import RejectReason
from routers.keyboards import admin as kb
from settings import settings

# –†–æ—É—Ç–µ—Ä –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ
group_router = Router()
group_router.message.middleware.register(DatabaseMiddleware())
group_router.callback_query.middleware.register(DatabaseMiddleware())
group_router.message.middleware.register(AdminMiddleware())
group_router.callback_query.middleware.register(AdminMiddleware())
group_router.message.middleware.register(CheckGroupMessageMiddleware())
group_router.callback_query.middleware.register(CheckGroupMessageMiddleware())


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
@group_router.callback_query(F.data.split("|")[0] == "executor_confirm")
async def confirm_executor_registration(callback: CallbackQuery, session: Any, bot: Bot, admin: bool) -> None:
    """–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–æ–≤–æ–π –∞–Ω–∫–µ—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–µ"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∞
    if not admin:
        await callback.message.answer("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º")
        return

    # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
    await callback.message.edit_reply_markup(reply_markup=None)

    # –ø–æ–ª—É—á–∞–µ–º tg_id –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    executor_tg_id = callback.data.split("|")[1]

    # –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    admin_tg_id = str(callback.from_user.id)
    await AsyncOrm.verify_executor(executor_tg_id, admin_tg_id, session)

    # –û–ø–æ–≤–µ—â–∞–µ–º –∞–¥–º–∏–Ω–æ–≤ –≤ –≥—Ä—É–ø–ø–µ
    admin_name = str(callback.from_user.first_name)
    edited_caption = callback.message.caption.replace("üö´ –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞", "‚úîÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞") \
                     + f"\n\n‚úÖ <i>–ê–Ω–∫–µ—Ç–∞ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º \"{admin_name}\"</i>"
    await callback.message.edit_caption(caption=edited_caption)

    # –û–ø–æ–≤–µ—â–∞–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    user_msg = f"‚úÖ –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞\n\n–¢–µ–ø–µ—Ä—å –≤–∞—à—É –∞–Ω–∫–µ—Ç—É –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å –∫–ª–∏–µ–Ω—Ç—ã/–∑–∞–∫–∞–∑—á–∏–∫–∏"
    keyboard = to_main_menu()
    await bot.send_message(executor_tg_id, user_msg, reply_markup=keyboard.as_markup(), message_effect_id="5046509860389126442")


# –û—Ç–∫–∞–∑ –≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
@group_router.callback_query(F.data.split("|")[0] == "executor_cancel")
async def cancel_verification(callback: CallbackQuery, session: Any, admin: bool, state: FSMContext) -> None:
    """–í—ã–±–æ—Ä –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–∞–∑–∞ –≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è"""
    # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
    await callback.message.edit_reply_markup(reply_markup=None)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∞
    if not admin:
        await callback.message.answer("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º")
        return

    # –°—Ç–∞–≤–∏–º —Å—Ç–µ–π—Ç
    await state.set_state(Reject.reason)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∫–µ—Ç—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    await state.update_data(caption_text=callback.message.caption)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º tg_id –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    user_tg_id = callback.data.split("|")[1]
    await state.update_data(user_tg_id=user_tg_id)

    reject_reasons: List[RejectReason] = await AsyncOrm.get_reject_reasons(session)

    # –ó–∞–≥–æ—Ç–æ–≤–∫–∏ –¥–ª—è –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç–∞
    await state.update_data(reject_reasons=reject_reasons)
    await state.update_data(selected_reasons=[])

    msg = callback.message.caption + "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–∞–∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
    keyboard = kb.select_reasons_keyboard(reject_reasons, [])

    await callback.message.edit_caption(caption=msg, reply_markup=keyboard.as_markup())


@group_router.callback_query(F.data.split("|")[0] == "reject_reason", Reject.reason)
async def select_reasons(callback: CallbackQuery, state: FSMContext, admin: bool) -> None:
    """–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç–∞"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∞
    if not admin:
        await callback.message.answer("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º")
        return

    reason_id = int(callback.data.split("|")[1])

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ —É–±–∏—Ä–∞–µ–º –ø—Ä–∏—á–∏–Ω—É –∏–∑ —Å–ø–∏—Å–∫–∞
    data = await state.get_data()
    selected_reasons = data["selected_reasons"]

    # –£–±–∏—Ä–∞–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞
    if reason_id in selected_reasons:
        selected_reasons.remove(reason_id)
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
    else:
        selected_reasons.append(reason_id)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
    await state.update_data(selected_reasons=selected_reasons)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    reject_reasons: List[RejectReason] = data["reject_reasons"]
    caption_text = data["caption_text"]
    msg = caption_text + "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–∞–∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
    keyboard = kb.select_reasons_keyboard(reject_reasons, selected_reasons)

    await callback.message.edit_caption(caption=msg, reply_markup=keyboard.as_markup())


@group_router.callback_query(F.data.split("|")[0] == "reject_reasons_done", Reject.reason)
async def send_reject_to_user(callback: CallbackQuery, state: FSMContext, session: Any, bot: Bot, admin: bool) -> None:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Ç–∫–∞–∑–µ –≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∞
    if not admin:
        await callback.message.answer("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º")
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    data = await state.get_data()
    reason_ids = data["selected_reasons"]
    user_tg_id = data["user_tg_id"]

    # –°–∫–∏–¥—ã–≤–∞–µ–º —Å—Ç–µ–π—Ç
    await state.clear()

    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏—á–∏–Ω—ã
    selected_reasons: List[RejectReason] = await AsyncOrm.get_reject_reasons_by_ids(reason_ids, session)

    # –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –æ–± –æ—Ç–º–µ–Ω–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    admin_name = str(callback.from_user.first_name)
    caption_text = data["caption_text"] + f"\n\n‚ùå <i>–ê–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º \"{admin_name}\"\n–ü—Ä–∏—á–∏–Ω—ã:\n</i>"
    reasons_text_for_admin = "\n".join([f"\t‚Ä¢ {reason.reason}" for reason in selected_reasons])

    await callback.message.edit_caption(caption=caption_text+reasons_text_for_admin)

    # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ—Ç–º–µ–Ω–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    reasons_text_for_user = "\n".join([f"\t‚Ä¢ {reason.reason}\n" + f"<i>{reason.text}</i>" for reason in selected_reasons])
    user_msg = f"‚ùå –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–∞—à–µ–π –∞–Ω–∫–µ—Ç—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n\n" \
               f"<b>–ü—Ä–∏—á–∏–Ω—ã:\n</b>{reasons_text_for_user}\n\n" \
               f"–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{settings.admin_tg_username}"
    await bot.send_message(user_tg_id, user_msg)

    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ null
    user_role = await AsyncOrm.get_user_role(user_tg_id, session)
    await AsyncOrm.delete_user_role(user_tg_id, session)

    # –£–¥–∞–ª–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    if user_role == UserRoles.EXECUTOR.value:
        await AsyncOrm.delete_executor(user_tg_id, session)
    elif user_role == UserRoles.CLIENT.value:
        await AsyncOrm.delete_client(user_tg_id, session)

    logger.info(f"–ê–Ω–∫–µ—Ç–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_tg_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {admin_name}")

"""init

Revision ID: a55958974f6c
Revises:
Create Date: 2025-10-26 12:34:30.153799

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a55958974f6c"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "professions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("emoji", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_professions_title"), "professions", ["title"], unique=True
    )
    op.create_table(
        "reject_reasons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("reason", sa.String(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_reject_reasons_reason"),
        "reject_reasons",
        ["reason"],
        unique=False,
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tg_id", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("firstname", sa.String(), nullable=True),
        sa.Column("lastname", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("is_banned", sa.Boolean(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("role", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_role"), "users", ["role"], unique=False)
    op.create_index(op.f("ix_users_tg_id"), "users", ["tg_id"], unique=True)
    op.create_table(
        "clients",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tg_id", sa.String(), nullable=False),
        sa.Column(
            "name",
            sa.String(length=50),
            nullable=False,
            comment="Имя пользователя должно содержать не более 50 символов",
        ),
        sa.ForeignKeyConstraint(
            ["tg_id"], ["users.tg_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "executors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tg_id", sa.String(), nullable=False),
        sa.Column(
            "name",
            sa.String(length=50),
            nullable=False,
            comment="Имя пользователя должно содержать не более 50 символов",
        ),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column("description", sa.String(length=500), nullable=False),
        sa.Column("rate", sa.String(), nullable=False),
        sa.Column("experience", sa.String(), nullable=False),
        sa.Column("links", sa.String(), nullable=False),
        sa.Column("availability", sa.String(), nullable=False),
        sa.Column("contacts", sa.String(), nullable=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("photo", sa.Boolean(), nullable=False),
        sa.Column("verified", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tg_id"], ["users.tg_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "jobs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("profession_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["profession_id"], ["professions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_jobs_title"), "jobs", ["title"], unique=True)
    op.create_table(
        "orders",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tg_id", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("task", sa.String(length=1000), nullable=False),
        sa.Column("price", sa.String(), nullable=True),
        sa.Column("requirements", sa.String(), nullable=True),
        sa.Column("period", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("client_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["client_id"], ["professions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_orders_tg_id"), "orders", ["tg_id"], unique=False)
    op.create_table(
        "executors_jobs",
        sa.Column("job_id", sa.Integer(), nullable=False),
        sa.Column("executor_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["executor_id"], ["executors.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["job_id"], ["jobs.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("job_id", "executor_id"),
    )
    op.create_table(
        "favorite_executors",
        sa.Column("client_id", sa.Integer(), nullable=False),
        sa.Column("executor_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["client_id"], ["clients.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["executor_id"], ["executors.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("client_id", "executor_id"),
    )
    op.create_table(
        "favorite_orders",
        sa.Column("executor_id", sa.Integer(), nullable=False),
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["executor_id"], ["executors.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["order_id"], ["orders.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("executor_id", "order_id"),
    )
    op.create_table(
        "orders_jobs",
        sa.Column("job_id", sa.Integer(), nullable=False),
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["job_id"], ["jobs.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["order_id"], ["orders.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("job_id", "order_id"),
    )
    op.create_table(
        "taskfiles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("filename", sa.String(), nullable=False),
        sa.Column("file_id", sa.String(), nullable=False),
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["order_id"], ["orders.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_taskfiles_filename"), "taskfiles", ["filename"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_taskfiles_filename"), table_name="taskfiles")
    op.drop_table("taskfiles")
    op.drop_table("orders_jobs")
    op.drop_table("favorite_orders")
    op.drop_table("favorite_executors")
    op.drop_table("executors_jobs")
    op.drop_index(op.f("ix_orders_tg_id"), table_name="orders")
    op.drop_table("orders")
    op.drop_index(op.f("ix_jobs_title"), table_name="jobs")
    op.drop_table("jobs")
    op.drop_table("executors")
    op.drop_table("clients")
    op.drop_index(op.f("ix_users_tg_id"), table_name="users")
    op.drop_index(op.f("ix_users_role"), table_name="users")
    op.drop_table("users")
    op.drop_index(
        op.f("ix_reject_reasons_reason"), table_name="reject_reasons"
    )
    op.drop_table("reject_reasons")
    op.drop_index(op.f("ix_professions_title"), table_name="professions")
    op.drop_table("professions")
    # ### end Alembic commands ###
